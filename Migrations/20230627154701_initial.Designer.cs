// <auto-generated />
using System;
using AgenciaViajes.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaViajes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230627154701_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgenciaViajes.Models.Actividad", b =>
                {
                    b.Property<int>("idAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAct");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAct"), 1L, 1);

                    b.Property<string>("duracionAct")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("duracionAct");

                    b.Property<string>("nameAct")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nameAct");

                    b.Property<decimal>("precioAct")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("precioAct");

                    b.HasKey("idAct");

                    b.ToTable("Actividad", (string)null);
                });

            modelBuilder.Entity("AgenciaViajes.Models.Aerolinea", b =>
                {
                    b.Property<int>("idAero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idAero"), 1L, 1);

                    b.Property<string>("nameAero")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nameAero");

                    b.HasKey("idAero");

                    b.ToTable("Aerolinea", (string)null);
                });

            modelBuilder.Entity("AgenciaViajes.Models.Cliente", b =>
                {
                    b.Property<int>("idCl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCl");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCl"), 1L, 1);

                    b.Property<DateTime>("birthdateCl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("datetime2")
                        .HasColumnName("birthdateCl");

                    b.Property<int?>("idTd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("idTd");

                    b.Property<string>("lnameCl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lnameCl");

                    b.Property<string>("nameCl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nameCl");

                    b.Property<string>("nroDocCl")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nroDocCl");

                    b.HasKey("idCl");

                    b.HasIndex("idTd");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("AgenciaViajes.Models.Compra", b =>
                {
                    b.Property<int>("idCr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCr"), 1L, 1);

                    b.Property<int?>("idAct")
                        .HasColumnType("int");

                    b.Property<int?>("idCl")
                        .HasColumnType("int");

                    b.Property<int?>("idHot")
                        .HasColumnType("int");

                    b.Property<int?>("idTb")
                        .HasColumnType("int");

                    b.Property<int?>("idVuelo")
                        .HasColumnType("int");

                    b.Property<decimal>("subtotalCr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalCr")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idCr");

                    b.HasIndex("idAct");

                    b.HasIndex("idCl");

                    b.HasIndex("idHot");

                    b.HasIndex("idTb");

                    b.HasIndex("idVuelo");

                    b.ToTable("compras");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Hotel", b =>
                {
                    b.Property<int>("idHot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idHot"), 1L, 1);

                    b.Property<string>("addressHot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameHot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("priceHot")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idHot");

                    b.ToTable("hoteles");
                });

            modelBuilder.Entity("AgenciaViajes.Models.TipoDocumento", b =>
                {
                    b.Property<int>("idTd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTd"), 1L, 1);

                    b.Property<string>("nameTd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTd");

                    b.ToTable("tiposDocumentos");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Trabajador", b =>
                {
                    b.Property<int>("idTrab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTrab"), 1L, 1);

                    b.Property<int>("idTd")
                        .HasColumnType("int");

                    b.Property<string>("lnameTrab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nameTrab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nroDocTrab")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTrab");

                    b.HasIndex("idTd");

                    b.ToTable("trabajadores");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Vuelo", b =>
                {
                    b.Property<int>("idVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVuelo"), 1L, 1);

                    b.Property<string>("asientoVuelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateVuelo")
                        .HasColumnType("datetime2");

                    b.Property<string>("destinoVuelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idAero")
                        .HasColumnType("int");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("salidaVuelo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idVuelo");

                    b.HasIndex("idAero");

                    b.ToTable("vuelos");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Cliente", b =>
                {
                    b.HasOne("AgenciaViajes.Models.TipoDocumento", "tipoDocumento")
                        .WithMany("clientes")
                        .HasForeignKey("idTd");

                    b.Navigation("tipoDocumento");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Compra", b =>
                {
                    b.HasOne("AgenciaViajes.Models.Actividad", "actividad")
                        .WithMany("compra")
                        .HasForeignKey("idAct");

                    b.HasOne("AgenciaViajes.Models.Cliente", "cliente")
                        .WithMany("compra")
                        .HasForeignKey("idCl");

                    b.HasOne("AgenciaViajes.Models.Hotel", "hotel")
                        .WithMany("compras")
                        .HasForeignKey("idHot");

                    b.HasOne("AgenciaViajes.Models.Trabajador", "trabajador")
                        .WithMany("compra")
                        .HasForeignKey("idTb");

                    b.HasOne("AgenciaViajes.Models.Vuelo", "vuelo")
                        .WithMany("compras")
                        .HasForeignKey("idVuelo");

                    b.Navigation("actividad");

                    b.Navigation("cliente");

                    b.Navigation("hotel");

                    b.Navigation("trabajador");

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Trabajador", b =>
                {
                    b.HasOne("AgenciaViajes.Models.TipoDocumento", "tipoDocumento")
                        .WithMany("trabajadores")
                        .HasForeignKey("idTd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoDocumento");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Vuelo", b =>
                {
                    b.HasOne("AgenciaViajes.Models.Aerolinea", "aerolinea")
                        .WithMany("vuelos")
                        .HasForeignKey("idAero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aerolinea");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Actividad", b =>
                {
                    b.Navigation("compra");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Aerolinea", b =>
                {
                    b.Navigation("vuelos");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Cliente", b =>
                {
                    b.Navigation("compra");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Hotel", b =>
                {
                    b.Navigation("compras");
                });

            modelBuilder.Entity("AgenciaViajes.Models.TipoDocumento", b =>
                {
                    b.Navigation("clientes");

                    b.Navigation("trabajadores");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Trabajador", b =>
                {
                    b.Navigation("compra");
                });

            modelBuilder.Entity("AgenciaViajes.Models.Vuelo", b =>
                {
                    b.Navigation("compras");
                });
#pragma warning restore 612, 618
        }
    }
}
